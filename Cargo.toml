[package]
name = "nstd-sys"
version = "0.8.0"
edition = "2021"
license = "MIT"
homepage = "https://github.com/RustEnthusiast/nstd"
repository = "https://github.com/RustEnthusiast/nstd"
description = "Cross platform general purpose C library written in Rust."
readme = "README.md"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "doc_cfg"]

[package.metadata.capi]
library.name = "nstd"
pkg_config.name = "libnstd"
pkg_config.filename = "nstd"
header.generation = false
install.include.asset = [{from = "include/**/*", to = ""}]

[profile.dev]
panic = "abort"

[profile.release]
overflow-checks = true
panic = "abort"

[features]
default = ["core", "std"]
std = []
capi = ["nstdapi/capi"]
nstd = [
    "alloc", "app", "core", "cstring", "env", "fs", "heap_ptr", "image", "io", "math", "mutex",
    "os", "os_unix_alloc", "os_unix_io", "os_unix_mutex", "os_unix_shared_lib", "os_unix_time",
    "os_windows_alloc", "os_windows_shared_lib", "os_windows_str", "proc", "shared_lib",
    "shared_ptr", "string", "thread", "time", "timed_mutex", "vec", "window"
]
alloc = ["core", "libc", "os_windows_alloc"]
app = ["core", "gilrs", "heap_ptr", "std", "string", "vec", "winit"]
core = []
cstring = ["alloc", "core", "vec"]
env = ["alloc", "core", "io", "std", "string", "vec"]
fs = ["alloc", "core", "io", "os_unix_io", "std", "string", "time", "vec"]
heap_ptr = ["alloc", "core"]
image = ["core", "dep:image", "std"]
image_gif = ["image", "image/gif"]
image_ico = ["image", "image/ico"]
image_jpeg = ["image", "image/jpeg"]
image_png = ["image", "image/png"]
io = ["alloc", "core", "os_unix_io", "std", "string", "vec"]
math = ["std"]
mutex = ["alloc", "core", "heap_ptr", "std"]
os = ["windows-sys"]
os_unix_alloc = ["libc", "os"]
os_unix_io = ["alloc", "core", "errno", "libc", "os", "string", "vec"]
os_unix_mutex = ["core", "heap_ptr", "libc", "os", "os_unix_time", "thread"]
os_unix_shared_lib = ["core", "libc", "os"]
os_unix_time = ["core", "libc", "os"]
os_windows_alloc = ["core", "os", "windows-sys/Win32_System_Memory"]
os_windows_shared_lib = ["core", "os", "windows-sys/Win32_System_LibraryLoader"]
os_windows_str = ["alloc", "core", "os", "vec", "windows-sys/Win32_Globalization"]
proc = ["alloc", "core", "io", "std"]
shared_lib = ["alloc", "core", "cstring", "libc", "os_windows_shared_lib", "os_windows_str", "vec"]
shared_ptr = ["alloc", "core"]
string = ["alloc", "core", "vec"]
thread = ["alloc", "core", "heap_ptr", "io", "std"]
time = ["core", "os_unix_time", "std"]
timed_mutex = ["capi", "cc", "core", "heap_ptr", "os_unix_mutex", "thread"]
vec = ["alloc", "core"]
window = ["app", "core", "image", "std", "winit"]

[dependencies]
cfg-if = "1.0"
gilrs = { version = "0.10", optional = true }
image = { version = "0.24", optional = true, default-features = false }
libc = { version = "0.2", optional = true, default-features = false }
nstdapi = "0.1"
winit = { version = "0.28", optional = true }

[target.'cfg(unix)'.dependencies]
errno = { version = "0.3", optional = true, default-features = false }

[target.'cfg(windows)'.dependencies]
windows-sys = { version = "0.48", optional = true, features = ["Win32_Foundation"] }

[build-dependencies]
cc = { version = "1.0", optional = true }
