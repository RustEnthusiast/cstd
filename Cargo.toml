[package]
name = "nstd-sys"
version = "0.4.1"
edition = "2021"
license = "MIT"
homepage = "https://github.com/RustEnthusiast/nstd"
repository = "https://github.com/RustEnthusiast/nstd"
description = "Cross platform general purpose C library written in Rust."
readme = "README.md"
exclude = ["include"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "doc_cfg"]

[profile.release]
overflow-checks = true
panic = "abort"

[features]
default = ["std", "nstd_core"]
std = []
clib = []
asm = []
nstd_alloc = ["nstd_core", "nstd_os_unix_alloc", "nstd_os_windows_alloc"]
nstd_core = []
nstd_cstring = ["nstd_alloc", "nstd_core", "nstd_vec"]
nstd_env = ["nstd_core", "nstd_io", "nstd_string", "nstd_vec", "std"]
nstd_fs = ["nstd_core", "nstd_io", "nstd_string", "nstd_vec", "std"]
nstd_heap_ptr = ["nstd_alloc", "nstd_core"]
nstd_io = ["nstd_alloc", "nstd_core", "nstd_string", "nstd_vec", "std"]
nstd_math = ["std"]
nstd_os = []
nstd_os_unix_alloc = ["libc", "nstd_core", "nstd_os"]
nstd_os_unix_shared_lib = ["libc", "nstd_core", "nstd_os"]
nstd_os_windows_alloc = [
    "nstd_core", "nstd_os", "windows-sys/Win32_Foundation", "windows-sys/Win32_System_Memory"
]
nstd_os_windows_shared_lib = [
    "nstd_core", "nstd_os", "windows-sys/Win32_Foundation", "windows-sys/Win32_System_LibraryLoader"
]
nstd_proc = ["nstd_core", "nstd_io", "std"]
nstd_shared_lib = [
    "nstd_core", "nstd_cstring", "nstd_os_unix_shared_lib", "nstd_os_windows_shared_lib"
]
nstd_shared_ptr = ["nstd_alloc", "nstd_core"]
nstd_string = ["nstd_alloc", "nstd_core", "nstd_vec"]
nstd_thread = ["nstd_core", "nstd_heap_ptr", "nstd_io", "std"]
nstd_vec = ["nstd_alloc", "nstd_core"]

[dependencies]

[target.'cfg(target_family = "unix")'.dependencies]
libc = { version = "0.2", optional = true, default-features = false }

[target.'cfg(target_os = "windows")'.dependencies]
windows-sys = { version = "0.42", optional = true }
