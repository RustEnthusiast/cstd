[package]
name = "nstd-sys"
version = "0.5.0"
edition = "2021"
license = "MIT"
homepage = "https://github.com/RustEnthusiast/nstd"
repository = "https://github.com/RustEnthusiast/nstd"
description = "Cross platform general purpose C library written in Rust."
readme = "README.md"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "doc_cfg"]

[package.metadata.capi]
library.name = "nstd"
pkg_config.name = "libnstd"
pkg_config.filename = "nstd"
header.generation = false
install.include.asset = [{from = "include/**/*", to = ""}]

[profile.dev]
panic = "abort"

[profile.release]
overflow-checks = true
panic = "abort"

[features]
default = ["std", "nstd_core"]
std = []
capi = ["nstdapi/capi"]
asm = []
panic_handler = ["panic-halt"]
nstd_alloc = ["nstd_core", "nstd_os_unix_alloc", "nstd_os_windows_alloc"]
nstd_core = []
nstd_cstring = ["nstd_alloc", "nstd_core", "nstd_vec"]
nstd_env = ["nstd_core", "nstd_io", "nstd_string", "nstd_vec", "std"]
nstd_fs = ["nstd_core", "nstd_io", "nstd_os_unix_io", "nstd_string", "nstd_time", "nstd_vec", "std"]
nstd_heap_ptr = ["nstd_alloc", "nstd_core"]
nstd_io = ["nstd_alloc", "nstd_core", "nstd_os_unix_io", "nstd_string", "nstd_vec", "std"]
nstd_math = ["std"]
nstd_mutex = ["nstd_core", "nstd_heap_ptr", "std"]
nstd_os = ["windows-sys"]
nstd_os_unix_alloc = ["libc", "nstd_core", "nstd_os"]
nstd_os_unix_io = ["errno", "libc", "nstd_alloc", "nstd_core", "nstd_os", "nstd_string", "nstd_vec"]
nstd_os_unix_mutex = [
    "libc", "nstd_core", "nstd_heap_ptr", "nstd_os", "nstd_os_unix_time", "nstd_thread"
]
nstd_os_unix_shared_lib = ["libc", "nstd_core", "nstd_os"]
nstd_os_unix_time = ["libc", "nstd_core", "nstd_os"]
nstd_os_windows_alloc = ["nstd_core", "nstd_os", "windows-sys/Win32_System_Memory"]
nstd_os_windows_shared_lib = ["nstd_core", "nstd_os", "windows-sys/Win32_System_LibraryLoader"]
nstd_os_windows_str = ["nstd_core", "nstd_os", "nstd_vec", "windows-sys/Win32_Globalization"]
nstd_proc = ["nstd_core", "nstd_io", "std"]
nstd_shared_lib = [
    "nstd_core", "nstd_cstring", "nstd_os_unix_shared_lib", "nstd_os_windows_shared_lib",
    "nstd_os_windows_str", "nstd_vec"
]
nstd_shared_ptr = ["nstd_alloc", "nstd_core"]
nstd_string = ["nstd_alloc", "nstd_core", "nstd_vec"]
nstd_thread = ["nstd_core", "nstd_heap_ptr", "nstd_io", "std"]
nstd_time = ["nstd_core", "std"]
nstd_timed_mutex = ["capi", "cc", "nstd_core", "nstd_heap_ptr", "nstd_os_unix_mutex", "nstd_thread"]
nstd_vec = ["nstd_alloc", "nstd_core"]

[dependencies]
cfg-if = "1.0"
libc = { version = "0.2", optional = true, default-features = false }
nstdapi = "0.1"
panic-halt = { version = "0.2", optional = true }

[target.'cfg(unix)'.dependencies]
errno = { version = "0.3", optional = true, default-features = false }

[target.'cfg(windows)'.dependencies]
windows-sys = { version = "0.45", optional = true, features = ["Win32_Foundation"] }

[build-dependencies]
cc = { version = "1.0", optional = true }
